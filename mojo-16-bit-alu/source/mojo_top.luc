module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    output spi_miso,        // AVR SPI MISO
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    output avr_rx,          // AVR RX (FPGA TX)
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [4],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield    
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    .rst(rst){
      dff a[16] (#INIT(0));
      dff b[16] (#INIT(0));
      dff display[16] (#INIT(0));
      multi_seven_seg seg; // for display
      stateCounter sc; // timing gate for the counter to loop through all the states
    }
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  alu myAlu;
  sig f[16]; //16-bit output of alu
    
  fsm state(.clk(clk)) = {IDLE, ADD1, ADD2, ADD3, ADD4, SUB1, SUB2, SUB3, SUB4, AND1, AND2, OR1, OR2, 
                          XOR1, XOR2, A1, A2, SHL1, SHL2, SHR1, SHR2, SRA1, SRA2, CMPEQ1, CMPEQ2,
                          CMPLT1, CMPLT2, CMPLT3, CMPLE1, CMPLE2, CMPLE3, MUL1, MUL2, DIV1, DIV2, WRONGADD, 
                          FAIL, SUCCESS}; //fsm state machine for all stages
    
  always {   
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;           // select no digits  
    
    seg.values = {4hc, 4h1,4h1,4h1}; // segments will display 'H111' by default 
    io_seg = ~seg.seg; // connect segments to the driver
    io_sel = ~seg.sel; // connect digit select to the driver 
  
    if (io_button[0] == 1){ //pressing "UP" button stores a to reg a 
      a.d = c{io_dip[1], io_dip[0]};     
      display.d = a.q;
      }       
    if (io_button[2] == 1){ //pressing "DOWN" button stores b to reg b 
      b.d = c{io_dip[1], io_dip[0]};
      display.d = b.q;
      }
    if (io_button[4] == 1) { // pressing "RIGHT" calculate a b 
      display.d = myAlu.f;
      }    
       
    myAlu.a = a.q;
    myAlu.b = b.q;
    
    myAlu.alufn = io_dip[2][5:0];
    io_led[1:0] = {display.q[15-:8], display.q[7-:8]};  // update io_led row 1 and 0 with output
    io_led[2][7:4] = c{myAlu.overflow, myAlu.error};    // errors: addition or multiplication overflow, division by 0 (011), invalid alufn: boolean (100), compare (010), shifter (001)
    
    case(state.q){ 
    
      state.IDLE: //  // Display on 7-segment "H111" 
        if(io_button[1] == 1) { // Start Automatic Success Testing when centre button is pressed
          state.d = state.ADD1;
        }
        
        if(io_button[3] == 1){ // Start Automatic Fail Testing when left button is pressed
          state.d = state.WRONGADD;
        }
        
      state.WRONGADD: // Display on 7-segment "0000"
        seg.values = {4h0,4h0,4h0,4h0};
        myAlu.alufn = 6b000000; //selects addition operation of alu
        myAlu.a = 16b1000000000000000; // input a = -32768
        myAlu.b = 16b1000000000000000; // input b = -32768
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = -65536
          state.d = state.FAIL;
        }
        
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
        
      state.ADD1: // Display on 7-segment "0001"
        seg.values = {4h0, 4h0,4h0,4h1};
        myAlu.alufn = 6b000000; //selects addition operation of alu
        myAlu.a = 16b0000000010010110; // input a = 150 
        myAlu.b = 16b0000000000011110; // input b = 30
        f = myAlu.f; //output f
        if(f == 16b0000000010110100 && sc.inc_state==1){ // check output = 180
          state.d = state.ADD2;
        }
        else if (f != 16b0000000010110100 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.ADD2: // Display on 7-segment "0002"
        seg.values = {4h0, 4h0,4h0,4h2};
        myAlu.alufn = 6b000000; //selects addition operation of alu
        myAlu.a = 16b0000000010010110; // input a = 150
        myAlu.b = 16b1111111111100010; // input b = -30
        f = myAlu.f; //output f
        if(f == 16b0000000001111000 && sc.inc_state==1){ // check output = 120
          state.d = state.ADD3;
        }
        else if (f != 16b0000000001111000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.ADD3:  // Display on 7-segment "0003"
        seg.values = {4h0, 4h0,4h0,4h3};
        myAlu.alufn = 6b000000; //selects addition operation of alu
        myAlu.a = 16b1111111101101010; // input a = -150
        myAlu.b = 16b0000000000011110; // input b = 30
        f = myAlu.f; //output f
        if(f == 16b1111111110001000 && sc.inc_state==1){ // check output = -120
          state.d = state.ADD4;
        }
        else if (f != 16b1111111110001000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.ADD4: // Display on 7-segment "0004"
        seg.values = {4h0, 4h0,4h0,4h4};
        myAlu.alufn = 6b000000; //selects addition operation of alu
        myAlu.a = 16b0000000000000000; // input a = 0
        myAlu.b = 16b0000000000000000; // input b = 0
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = 0
          state.d = state.SUB1;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SUB1: // Display on 7-segment "0005"
        seg.values = {4h0, 4h0,4h0,4h5};
        myAlu.alufn = 6b000001; //selects subtraction operation of alu
        myAlu.a = 16b0000000010010110; // input a = 150 
        myAlu.b = 16b0000000000011110; // input b = 30
        f = myAlu.f; //output f
        if(f == 16b0000000001111000 && sc.inc_state==1){ // check output = 120
          state.d = state.SUB2;
        }
        else if (f != 16b0000000001111000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.SUB2: // Display on 7-segment "0006"
        seg.values = {4h0, 4h0,4h0,4h6};
        myAlu.alufn = 6b000001; //selects subtraction operation of alu
        myAlu.a = 16b0000000010010110; // input a = 150
        myAlu.b = 16b1111111111100010; // input b = -30
        f = myAlu.f; //output f
        if(f == 16b0000000010110100 && sc.inc_state==1){ // check output = 180
          state.d = state.SUB3;
        }
        else if (f != 16b0000000010110100 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SUB3: // Display on 7-segment "0007"
        seg.values = {4h0, 4h0,4h0,4h7};
        myAlu.alufn = 6b000001; //selects subtraction operation of alu
        myAlu.a = 16b1111111101101010; // input a = -150
        myAlu.b = 16b0000000000011110; // input b = 30
        f = myAlu.f; //output f
        if(f == 16b1111111101001100 && sc.inc_state==1){ // check output = -180
          state.d = state.SUB4;
        }
        else if (f != 16b1111111101001100 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.SUB4:  // Display on 7-segment "0008"
        seg.values = {4h0, 4h0,4h0,4h8};
        myAlu.alufn = 6b000001; //selects subtraction operation of alu
        myAlu.a = 16b1111111101101010; // input a = -150
        myAlu.b = 16b1111111111100010; // input b = -30
        f = myAlu.f; //output f
        if(f == 16b1111111110001000 && sc.inc_state==1){ // check output = -120
          state.d = state.AND1;
        }
        else if (f != 16b1111111110001000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }  
      
      state.AND1:  // Display on 7-segment "0009"
        seg.values = {4h0, 4h0,4h0,4h9};
        myAlu.alufn = 6b011000; //selects and operation of alu
        myAlu.a = 16b1111111100010001; // input a = 1111 1111 0001 0001 
        myAlu.b = 16b1111111111111100; // input b = 1111 1111 1111 1100 
        f = myAlu.f; //output f
        if(f == 16b1111111100010000 && sc.inc_state==1){ // check output = 1111 1111 0001 0000
          state.d = state.AND2;
        }
        else if (f != 16b1111111100010000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.AND2:  // Display on 7-segment "0010"
        seg.values = {4h0, 4h0,4h1,4h0};
        myAlu.alufn = 6b011000; //selects and operation of alu
        myAlu.a = 16b1000111100010001; // input a = 1000 1111 0001 0001 
        myAlu.b = 16b1111001111111110; // input b = 1111 0011 1111 1110  
        f = myAlu.f; //output f
        if(f == 16b1000001100010000 && sc.inc_state==1){ // check output = 1000 0011 0001 0000
          state.d = state.OR1;
        }
        else if (f != 16b1000001100010000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.OR1:  // Display on 7-segment "0011"
        seg.values = {4h0, 4h0,4h1,4h1};
        myAlu.alufn = 6b011110; //selects or operation of alu
        myAlu.a = 16b1111111100010001; // input a = 1111 1111 0001 0001 
        myAlu.b = 16b1111111111111100; // input b = 1111 1111 1111 1100 
        f = myAlu.f; //output f
        if(f == 16b1111111111111101 && sc.inc_state==1){ // check output = 1111 1111 1111 1101
          state.d = state.OR2;
        }
        else if (f != 16b1111111111111101 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.OR2:  // Display on 7-segment "0012"
        seg.values = {4h0, 4h0,4h1,4h2};
        myAlu.alufn = 6b011110; //selects or operation of alu
        myAlu.a = 16b1000111100010001; // input a = 1000 1111 0001 0001 
        myAlu.b = 16b1111001111111110; // input b = 1111 0011 1111 1110  
        f = myAlu.f; //output f
        if(f == 16b1111111111111111 && sc.inc_state==1){ // check output = 1111 1111 1111 1111
          state.d = state.XOR1;
        }
        else if (f != 16b1111111111111111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.XOR1:  // Display on 7-segment "0013"
        seg.values = {4h0, 4h0,4h1,4h3};
        myAlu.alufn = 6b010110; //selects xor operation of alu
        myAlu.a = 16b1111111100010001; // input a = 1111 1111 0001 0001 
        myAlu.b = 16b1111111111111100; // input b = 1111 1111 1111 1100 
        f = myAlu.f; //output f
        if(f == 16b0000000011101101 && sc.inc_state==1){ // check output = 0000 0000 1110 1101
          state.d = state.XOR2;
        }
        else if (f != 16b0000000011101101 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.XOR2:  // Display on 7-segment "0014"
        seg.values = {4h0, 4h0,4h1,4h4};
        myAlu.alufn = 6b010110; //selects xor operation of alu
        myAlu.a = 16b1000111100010001; // input a = 1000 1111 0001 0001 
        myAlu.b = 16b1111001111111110; // input b = 1111 0011 1111 1110  
        f = myAlu.f; //output f
        if(f == 16b0111110011101111 && sc.inc_state==1){ // check output = 0111 1100 1110 1111
          state.d = state.A1;
        }
        else if (f != 16b0111110011101111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.A1: // Display on 7-segment "0015"
        seg.values = {4h0, 4h0,4h1,4h5};
        myAlu.alufn = 6b011010; //selects A operation of alu
        myAlu.a = 16b1111111100010001; // input a = 1111 1111 0001 0001
        myAlu.b = 16b1111111111111100; // input b = 1111 1111 1111 1100 
        f = myAlu.f; //output f
        if(f == 16b1111111100010001 && sc.inc_state==1){ // check output = 1111 1111 0001 0001
          state.d = state.A2;
        }
        else if (f != 16b1111111100010001 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.A2:  // Display on 7-segment "0016"
        seg.values = {4h0, 4h0,4h1,4h6};
        myAlu.alufn = 6b011010; //selects A operation of alu
        myAlu.a = 16b1000111100010001; // input a = 1000 1111 0001 0001 
        myAlu.b = 16b1111001111111110; // input b = 1111 0011 1111 1110  
        f = myAlu.f; //output f
        if(f == 16b1000111100010001 && sc.inc_state==1){ // check output = 1000 1111 0001 0001
          state.d = state.SHL1;
        }
        else if (f != 16b1000111100010001 && sc.inc_state==1){
          state.d = state.FAIL;
        } 
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SHL1: // Display on 7-segment "0017"
        seg.values = {4h0, 4h0,4h1,4h7};
        myAlu.alufn = 6b100000; //selects SHL operation of alu
        myAlu.a = 16b0000000011111111; // input a = 0000 0000 1111 1111 
        myAlu.b = 16b0000000000000000; // input b = 0 = 0000 0000 0000 0000 
        f = myAlu.f; //output f
        if(f == 16b0000000011111111 && sc.inc_state==1){ // check output = 0000 0000 1111 1111
          state.d = state.SHL2;
        }
        else if (f != 16b0000000011111111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SHL2:  // Display on 7-segment "0018"
        seg.values = {4h0, 4h0,4h1,4h8};
        myAlu.alufn = 6b100000; //selects SHL operation of alu
        myAlu.a = 16b0000000011111111; // input a = 0000 0000 1111 1111  
        myAlu.b = 16b0000000000001000; // input b = 8 = 0000 0000 0000 1000  
        f = myAlu.f; //output f
        if(f == 16b1111111100000000 && sc.inc_state==1){ // check output = 1111 1111 0000 0000
          state.d = state.SHR1;
        }
        else if (f != 16b1111111100000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
           
      state.SHR1: // Display on 7-segment "0019"
        seg.values = {4h0, 4h0,4h1,4h9};
        myAlu.alufn = 6b100001; //selects SHR operation of alu
        myAlu.a = 16b0000000011111111; // input a = 0000 0000 1111 1111 
        myAlu.b = 16b0000000000000000; // input b = 0 = 0000 0000 0000 0000 
        f = myAlu.f; //output f
        if(f == 16b0000000011111111 && sc.inc_state==1){ // check output = 0000 0000 1111 1111
          state.d = state.SHR2;
        }
        else if (f != 16b0000000011111111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SHR2: // Display on 7-segment "0020"
        seg.values = {4h0, 4h0,4h2,4h0};
        myAlu.alufn = 6b100001; //selects SHR operation of alu
        myAlu.a = 16b1000000011111111; // input a = 1000 0000 1111 1111  
        myAlu.b = 16b0000000000001001; // input b = 9 = 0000 0000 0000 1001  
        f = myAlu.f; //output f
        if(f == 16b0000000001000000 && sc.inc_state==1){ // check output = 0000 0000 0100 0000
          state.d = state.SRA1;
        }
        else if (f != 16b0000000001000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
           
      state.SRA1: // Display on 7-segment "0021"
        seg.values = {4h0, 4h0,4h2,4h1};
        myAlu.alufn = 6b100011; //selects SRA operation of alu
        myAlu.a = 16b1110111100001111 ; // input a = 1110 1111 0000 1111  
        myAlu.b = 16b0000000000001000; // input b = 8 = 0000 0000 0000 1000 
        f = myAlu.f; //output f
        if(f == 16b1111111111101111 && sc.inc_state==1){ // check output = 1111 1111 1110 1111
          state.d = state.SRA2;
        }
        else if (f != 16b1111111111101111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.SRA2: // Display on 7-segment "0022"
        seg.values = {4h0, 4h0,4h2,4h2};
        myAlu.alufn = 6b100011; //selects SRA operation of alu
        myAlu.a = 16b0110111100001111; // input a = 0110 1111 0000 1111 
        myAlu.b = 16b0000000000001000; // input b = 8 = 0000 0000 0000 1000 
        f = myAlu.f; //output f
        if(f == 16b0000000001101111 && sc.inc_state==1){ // check output = 0000 0000 0110 1111
          state.d = state.CMPEQ1;
        }
        else if (f != 16b0000000001101111 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.CMPEQ1: // Display on 7-segment "0023"
        seg.values = {4h0, 4h0,4h2,4h3};
        myAlu.alufn = 6b110011; //selects CMPEQ operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000001100100; // input b = 100 = 0000 0000 0110 0100
        f = myAlu.f; //output f
        if(f == 16b0000000000000001 && sc.inc_state==1){ // check output = True
          state.d = state.CMPEQ2;
        }
        else if (f != 16b0000000000000001 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.CMPEQ2: // Display on 7-segment "0024"
        seg.values = {4h0, 4h0,4h2,4h4};
        myAlu.alufn = 6b110011; //selects CMPEQ operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000000000001; // input b = 1 = 0000 0000 0000 0001 
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = False
          state.d = state.CMPLT1;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.CMPLT1: // Display on 7-segment "0025"
        seg.values = {4h0, 4h0,4h2,4h5};
        myAlu.alufn = 6b110101; //selects CMPLT operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000001100100; // input b = 100 = 0000 0000 0110 0100
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = False
          state.d = state.CMPLT2;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.CMPLT2: // Display on 7-segment "0026"
        seg.values = {4h0, 4h0,4h2,4h6};
        myAlu.alufn = 6b110101; //selects CMPLT operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000001100101; // input b = 101 = 0000 0000 0110 0101
        f = myAlu.f; //output f
        if(f == 16b0000000000000001 && sc.inc_state==1){ // check output = True
          state.d = state.CMPLT3;
        }
        else if (f != 16b0000000000000001 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.CMPLT3: // Display on 7-segment "0027"
        seg.values = {4h0, 4h0,4h2,4h7};
        myAlu.alufn = 6b110101; //selects CMPLE operation of alu
        myAlu.a = 16b0000000001100101; // input a = 101 = 0000 0000 0110 0101
        myAlu.b = 16b0000000001100100; // input b = 100 = 0000 0000 0110 0100
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = False
          state.d = state.CMPLE1;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.CMPLE1: // Display on 7-segment "0028"
        seg.values = {4h0, 4h0,4h2,4h8};
        myAlu.alufn = 6b110111; //selects CMPLE operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000001100100; // input b = 100 = 0000 0000 0110 0100
        f = myAlu.f; //output f
        if(f == 16b0000000000000001 && sc.inc_state==1){ // check output = True
          state.d = state.CMPLE2;
        }
        else if (f != 16b0000000000000001 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
      
      state.CMPLE2: // Display on 7-segment "0029"
        seg.values = {4h0, 4h0,4h2,4h9};
        myAlu.alufn = 6b110111; //selects CMPLE operation of alu
        myAlu.a = 16b0000000001100100; // input a = 100 = 0000 0000 0110 0100
        myAlu.b = 16b0000000001100101; // input b = 101 = 0000 0000 0110 0101
        f = myAlu.f; //output f
        if(f == 16b0000000000000001 && sc.inc_state==1){ // check output = True
          state.d = state.CMPLE3;
        }
        else if (f != 16b0000000000000001 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.CMPLE3: // Display on 7-segment "0030"
        seg.values = {4h0, 4h0,4h3,4h0};
        myAlu.alufn = 6b110111; //selects CMPLE operation of alu
        myAlu.a = 16b0000000001100101; // input a = 101 = 0000 0000 0110 0101
        myAlu.b = 16b0000000001100100; // input b = 100 = 0000 0000 0110 0100
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = False
          state.d = state.MUL1;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.MUL1: // Display on 7-segment "0031"
        seg.values = {4h0, 4h0,4h3,4h1};
        myAlu.alufn = 6b000010; //selects MUL operation of alu
        myAlu.a = 16b0000000000000000; // input a = 0
        myAlu.b = 16b0000000000000000; // input b = 0
        f = myAlu.f; //output f
        if(f == 16b0000000000000000 && sc.inc_state==1){ // check output = 0
          state.d = state.MUL2;
        }
        else if (f != 16b0000000000000000 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.MUL2: // Display on 7-segment "0032"
        seg.values = {4h0, 4h0,4h3,4h2};
        myAlu.alufn = 6b000010; //selects MUL operation of alu
        myAlu.a = 16b1111111111111011; // input a = -5
        myAlu.b = 16b0000000000000111; // input b = 7
        f = myAlu.f; //output f
        if(f == 16b1111111111011101 && sc.inc_state==1){ // check output = -35
          state.d = state.DIV1;
        }
        else if (f != 16b1111111111011101 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }  
      
      state.DIV1: // Display on 7-segment "0033"
        seg.values = {4h0, 4h0,4h3,4h3};
        myAlu.alufn = 6b000011; //selects DIV operation of alu
        myAlu.a = 16b0000000000000110; // input a = 6
        myAlu.b = 16b0000000000000010; // input b = 2
        f = myAlu.f; //output f
        if(f == 16b0000000000000011 && sc.inc_state==1){ // check output = 3
          state.d = state.DIV2;
        }
        else if (f != 16b0000000000000011 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }    
      
      state.DIV2: // Display on 7-segment "0034"
        seg.values = {4h0, 4h0,4h3,4h4};
        myAlu.alufn = 6b000011; //selects DIV operation of alu
        myAlu.a = 16b1111111111111010; // input a = -6
        myAlu.b = 16b0000000000000010; // input b = 2
        f = myAlu.f; //output f
        if(f == 16b1111111111111101 && sc.inc_state==1){ // check output = -3
          state.d = state.SUCCESS;
        }
        else if (f != 16b1111111111111101 && sc.inc_state==1){
          state.d = state.FAIL;
        }
        if(rst_n == 0) {
          state.d = state.IDLE;
        }   
            
      state.FAIL: // Display on 7-segment "NAY1"
        seg.values = {4hb, 4ha,4hd,4h1};
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
        
      state.SUCCESS: // Display on 7-segment "YAY1"
        seg.values = {4hd, 4ha, 4hd, 4h1};
        if(rst_n == 0) {
          state.d = state.IDLE;
        }
    }
    
  }
        
}

